import <std/mem>
import <std/entry>

namespace libc {
    // Functions that are practically unnecessary in normal use and come from libc
    extern(linkname: "strlen") int strlen(char* cstr);
    char* btos(bool b) {
        char* toret = "true";
        if(b == false) toret = "false";
        return toret;
    }
}

namespace std {
    struct string {
        char* ptr;
        int len;

        std::string this(char* a) {
            this.len = libc::strlen(a);
            this.ptr = std::malloc(this.len+1);

            int i = 0;
            while(i<this.len) {
                this.ptr[i] = a[i];
                i += 1;
            }
            this.ptr[i] = '\0';
        }

        bool isDeleted {
            return (this.ptr == null);
        }

        bool has(char c) {
            bool has = false;

            int i = 0;
            while(i<this.len) {
                if(this.ptr[i] == c) {
                    has = true;
                    i = this.len;
                }
                i += 1;
            }
            return has;
        }

        void delete {
            std::free(this.ptr);
        }

        void set(char* a) {
            this.delete();
            this = std::string(a);
        }

        char toChar {
            std::assert(this.len>0);
            return this.ptr[0];
        }
    }
}