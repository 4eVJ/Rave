namespace libc {
    extern(linkname: "thrd_join") int thrd_join(long thrd, int* unk);
}

namespace std {
    namespace threads {
        extern(linkname: "thrd_create") int create(long* thrd, int(void*) start, void* unk);
        int* start(long thrd) {
            int* r;
            libc::thrd_join(thrd,r);
        } => r;
        extern(linkname: "thrd_detach") int remove(long thrd);
        extern(linkname: "thrd_exit") void exit();
    }

    struct thread {
        long id;

        void remove {
            std::threads::remove(this.id);
        }

        void exit {
            std::threads::exit();
        }

        void start {
            std::threads::start(this.id);
        }

        std::thread* this(int(void*) start) {
            std::threads::create(this.&id,start,null);
        } => this;
    }
}

// Minimal example:
// int a(void* b) => 0;
// int main {
//     std::thread* thrd = std::thread(a);
//     thrd.start();
// } => 0;