namespace std {
    namespace socket {
        alias AfInet = 1;
        alias AfInet6 = 2;
        alias SockStream = 1;


        struct sockaddr {
            int sa_family;
            char[14] sa_data;
        }

        struct sockaddr_storage {
            int sa_family;
            long __ss_align;
            char[120] __ss_padding;
        }

        struct in_addr {
            int s_addr;
        }

        struct sockaddr_in {
            int sa_family;
            short sin_port;
            std::socket::in_addr sin_addr;
        }

        extern(linkname: "recv") int recv(int s, char* buff, int len, int flags);
        extern(linkname: "socket") int socket(int domain, int type, int protocol);
        extern(linkname: "bind") int bind(int s, char* name, int namelen);
        extern(linkname: "listen") int listen(int s, int backlog);
        extern(linkname: "accept") int accept(int s, char* name, int* anamelen);
        extern(linkname: "connect") int connect(int s, char* name, int namelen);
        extern(linkname: "send") int send(int s, char* buf, int len, int flags);
        extern(linkname: "shutdown") int shutdown(int s, int how);
        extern(linkname: "close") int close(int s);
        extern(linkname: "getsockname") int getSockName(int fd, std::socket::sockaddr addr, int len);
        extern(linkname: "inet_addr") int inetAddr(char* ip);
        extern(linkname: "htons") short htons(int n);
    }
}