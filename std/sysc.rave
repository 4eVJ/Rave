/*
Rave guarantees that on all supported platforms, 
the result of a call with the same parameters will be the same.
*/

@if(__RAVE_OS == "LINUX") {
    namespace std {
        long __syscResult;
    }

    @if(__RAVE_PLATFORM == "X86_64") {
        namespace std {
            (vararg) void* syscall(int number) {
                bool fix;
	            asm(
                "
	                movq %rdi, %rax
	                movq %rsi, %rdi
	                movq %rdx, %rsi
	                movq %rcx, %rdx
	                movq %r8, %r10
	                movq %r9, %r8
	                movq 8(%rsp),%r9
	                syscall

	            	movq %rax, \"_Ravegstd::__syscResult\"
                ");
            } => cast(void*)std::__syscResult;
        }

        namespace std {
            namespace sysctable {
                alias Read = 0x00;
                alias Write = 0x01;
                alias OpenAt = 0x101;
                alias Close = 0x03;

                alias Socket = 0x29;
                alias Bind = 0x31;
                alias Shutdown = 0x30;
                alias Listen = 0x32;
                alias Connect = 42;
                alias GetSockName = 51;

                alias GetPID = 0x27;
                alias GetPPID = 0x6E;

                alias ClockGetTime = 228;
            }
        }
    };

    @if(__RAVE_PLATFORM == "X86") {
        namespace std {
            (vararg) void* syscall(int number) {
                bool fix;
	            asm(
                "
	                movl %ebx, %eax
	                movl %ecx, %ebx
	                movl %edx, %ecx
	                movl %esi, %edx
	                movl %ebp, %edi
	                syscall

	            	movl %eax, \"_Ravegstd::__syscResult\"
                ");
            } => cast(void*)std::__syscResult;
        }

        namespace std {
            namespace sysctable {
                alias Read = 0x03;
                alias Write = 0x04;
                alias OpenAt = 0x127;
                alias Close = 0x06;

                alias Socket = 0x167;
                alias Bind = 0x169;
                alias Shutdown = 0x175;
                alias Listen = 0x16B;
                alias Connect = 362;
                alias GetSockName = 367;

                alias GetPID = 0x14;
                alias GetPPID = 0x40;

                alias ClockGetTime = 265;
            }
        }
    };

    @if(__RAVE_PLATFORM == "AARCH64") {
        namespace std {
            (vararg) void* syscall(int number) {
                bool fix;
	            asm(
                "
	                mov x8, x1
                    mov x1, x2
                    mov x2, x3
                    mov x3, x4
                    mov x4, x5
                    mov x5, x6
	                svc #0

                    ldr x1, =\"_Ravegstd::__syscResult\"
                    str x0, [x1]
                ");
            } => cast(void*)std::__syscResult;
        }

        namespace std {
            namespace sysctable {
                alias Read = 0x3F;
                alias Write = 0x40;
                alias OpenAt = 0x38;
                alias Close = 0x39;

                alias Socket = 0xC6;
                alias Bind = 0xC8;
                alias Shutdown = 0xD2;
                alias Listen = 0xC9;
                alias Connect = 203;
                alias GetSockName = 204;

                alias GetPID = 0xAC;
                alias GetPPID = 0xAD;
                
                alias ClockGetTime = 113;
            }
        }
    };

    @if(__RAVE_PLATFORM == "ARM") {
        namespace std {
            (vararg) void* syscall(int number) {
                bool fix;
	            asm(
                "
	                mov r7, r0
                    mov r1, r2
                    mov r2, r3
                    mov r3, r4
                    mov r4, r5
                    mov r5, r6
	                swi 0x0

                    ldr r1, =\"_Ravegstd::__syscResult\"
                    str r0, [r1]
                ");
            } => cast(void*)std::__syscResult;
        }

        namespace std {
            namespace sysctable {
                alias Read = 0x03;
                alias Write = 0x04;
                alias OpenAt = 0x142;
                alias Close = 0x06;

                alias Socket = 0x119;
                alias Bind = 0x11A;
                alias Shutdown = 0x125;
                alias Listen = 0x11C;
                alias Connect = 283;
                alias GetSockName = 286;

                alias GetPID = 0x14;
                alias GetPPID = 0x40;

                alias ClockGetTime = 263;
            }
        }
    };

    @if(__RAVE_PLATFORM == "POWERPC") {
        namespace std {
            extern(linkname: "syscall", vararg) void* syscall(int number);
        }

        namespace std {
            namespace sysctable {
                alias Read = 0x03;
                alias Write = 0x04;

                alias Socket = 326;
                alias Bind = 327;
                alias Shutdown = 338;
                alias Listen = 329;
                alias Connect = 328;
                alias GetSockName = 331;

                alias GetPID = 20;
                alias GetPPID = 64;
            }
        }
    };

    @if(__RAVE_PLATFORM == "POWERPC64") {
        namespace std {
            extern(linkname: "syscall", vararg) void* syscall(int number);
        }

        namespace std {
            namespace sysctable {
                alias Read = 0x03;
                alias Write = 0x04;

                alias Socket = 326;
                alias Bind = 327;
                alias Shutdown = 338;
                alias Listen = 329;
                alias Connect = 328;
                alias GetSockName = 331;

                alias GetPID = 20;
                alias GetPPID = 64;
            }
        }
    };

    @if(__RAVE_PLATFORM == "S390X") {
        namespace std {
            extern(linkname: "syscall", vararg) void* syscall(int number);
        }

        namespace std {
            namespace sysctable {
                alias Read = 0x03;
                alias Write = 0x04;

                alias Socket = 359;
                alias Bind = 361;
                alias Shutdown = 373;
                alias Listen = 363;
                alias Connect = 362;
                alias GetSockName = 367;

                alias GetPID = 20;
                alias GetPPID = 64;
            }
        }
    };
};