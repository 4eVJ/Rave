import <std/io>

namespace std {
    alias NotEnoughMemory = 100;
    alias NotFound = 101;
    alias BeyondSize = 102;
    alias NullPointer = 103;

    struct error<T> {
        char* message = null;
        T value;
        int code;

        std::error<T> this => this;
        std::error<T> this(T value) {
            this.value = value;
        } => this;
        std::error<T> this(T value, char* message) {
            this.value = value;
            this.message = message;
        } => this;
        std::error<T> this(T value, char* message, int code) {
            this.value = value;
            this.message = message;
            this.code = code;
        } => this;

        void catch {
            if((this.message != null) && (this.message != "")) {
                std::puts(this.message);
                std::exit(1);
            }
        }

        void catch(void(char*,int) catcher) {
            if(this.message != null) catcher(this.message,this.code);
        }
    }
}
