import <std/io>

namespace libc {
    extern(linkname: "__errno_location") int* _errno();
    (inline) int errno => libc::_errno()[0];
}

namespace std {
    struct error<T> {
        char* message = null;
        T result;
        int code;

        std::error<T> this => this;
        std::error<T> this(T result) {
            this.result = result;
        } => this;
        std::error<T> this(T result, char* message) {
            this.result = result;
            this.message = message;
        } => this;
        std::error<T> this(T result, char* message, int code) {
            this.result = result;
            this.message = message;
            this.code = code;
        } => this;

        void catch {
            if((this.message != null) && (this.message != "")) {
                std::printf("%s",this.message);
                std::exit(1);
            }
        }

        void catch(void(char*,int) catcher) {
            if(this.message != null) catcher(this.message,this.code);
        }
    }
}
