import <std/io>

import "army"
import "taxes"
import "med"

struct Country {
    float peoples; // In millions
    float budget; // In millions
    float influence; // In millions
    float peoplesGrowth;
    Army* army;
    Taxe** taxes;
    Med* med;

    float bef;
    float befP;

    Med* newmed;
    Army* newarmy;

    Country* this(float peoples, float budget, float influence, float peoplesGrowth, Army* army, Taxe** taxes, Med* med) {
        this.peoples = peoples;
        this.budget = budget;
        this.influence = influence;
        this.army = army;
        this.peoplesGrowth = peoplesGrowth;
        this.influence = 2.0;
        this.taxes = taxes;
        this.med = med;
        this.newmed = Med(med.level,med.count,med.salary);
        this.newarmy = Army(army.count,army.salary);
    } => this;

    void goMonth {
        Med* nm = this.newmed;
        Army* am = this.newarmy;

        this.med.level = nm.level;
        this.med.count = nm.count;
        this.med.salary = nm.salary;

        this.army.count = am.count;
        this.army.salary = am.salary;

        float before = this.budget;
        float beforeP = this.peoples;
        
        this.bef = before;
        this.befP = beforeP;

        // Taxes
        this.budget += (this.taxes[0].go(this.peoples) * 0.000001);
        this.budget += (this.taxes[1].go(this.peoples) * 0.000001);

        // Army
        this.budget -= (this.army.go()*0.000001);
        std::printf("%.3f\n",cast(double)(this.army.go()*0.000001));

        // Medicine
        this.peoples = (this.peoples * this.peoplesGrowth);
        this.budget -= (this.med.go()*0.000001);
        std::printf("%.3f\n",cast(double)(this.med.go()*0.000001));

        // Proficit or deficit and ministers
        std::printf(
            "Текущий бюджет: %s%.3f млн. $%s\nТекущее население: %s%.3f млн.\n%s",
            std::green, cast(double)this.budget, std::reset,
            std::green, cast(double)this.peoples, std::reset
        );
        std::printf("\nОтчёты министерств: \n\n");

        // Finance
        std::printf("%s  Министерство Финансов%s\n","\033[33;1m",std::reset);
        if(this.budget < before) std::printf(
            "   Дефицит бюджета составил %s%.3f млн. $%s.\n",
            std::red, cast(double)(before - this.budget), std::reset
        );
        else std::printf(
            "   Профицит бюджета составил %s%.3f млн. $%s.\n",
            "\033[38;5;193m", cast(double)(this.budget - before), std::reset
        );
        std::printf("\n");
        // ...
        this.med.debug(this.peoples-beforeP);
        this.army.debug();
    }

    void back {
        // Proficit or deficit and ministers
        std::printf(
            "Текущий бюджет: %s%.3f млн. $%s\nТекущее население: %s%.3f млн.\n%s",
            std::green, cast(double)this.budget, std::reset,
            std::green, cast(double)this.peoples, std::reset
        );
        std::printf("\nОтчёты министерств: \n\n");

        // Finance
        std::printf("%s  Министерство Финансов%s\n","\033[33;1m",std::reset);
        if(this.budget < this.bef) std::printf(
            "   Дефицит бюджета составил %s%.3f млн. $%s.\n",
            std::red, cast(double)(this.bef - this.budget), std::reset
        );
        else std::printf(
            "   Профицит бюджета составил %s%.3f млн. $%s.\n",
            "\033[38;5;193m", cast(double)(this.budget - this.bef), std::reset
        );
        std::printf("\n");
        // ...
        this.med.debug(this.peoples-this.befP);
        this.army.debug();
    }

    void debug {
        std::printf(
            "Текущий бюджет: %s%.3f млн. $%s\nТекущее население: %s%.3f млн.\n%s",
            std::green, cast(double)this.budget, std::reset,
            std::green, cast(double)this.peoples, std::reset
        );
        std::printf("\nОтчёты министерств: \n\n");

        std::printf("   Отчётность начнётся со следующего месяца.\n\n");
    }
}